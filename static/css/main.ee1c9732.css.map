{"version":3,"file":"static/css/main.ee1c9732.css","mappings":"gRAGA,aACE,wBCEqB,CDErB,sCAA2C,CAD3C,aCHwB,CDOxB,MAAM,CANN,YAAa,CAIb,cAAe,CAHf,iBAAkB,CAIlB,KAAQ,CAER,UAAW,CAEZ,yBAED,wBAGM,aAAc,CAGd,iBADA,iBAAkB,CADlB,kBAEiB,CAQpB,CEKC,0BFnBJ,wBAUM,YAAa,CAEb,kBADA,iBACkB,CAErB,CG5BH,UAGE,wBAAyB,CAEzB,iBAAkB,CAJlB,oBAAqB,CAKrB,gBAJA,aAIgB,CANlB,gBAQI,wBFE0B,CED1B,cAAe,CATnB,qBAaI,8BAAgC,CAChC,qBAAqB,CCRzB,WACE,YAAa,CA2Bd,0BA5BD,WAII,WHP0B,CG+B7B,CA5BD,yBAQI,SAAU,CAKX,yBAbH,yBAUM,cAAe,CACf,UAAW,CAEd,CAbH,0BAgBI,SAAU,CAWX,yBA3BH,0BAmBM,YAAa,CACb,iBAAkB,CAOrB,CFAC,0BE3BJ,0BAwBM,aAAc,CACd,kBAAmB,CAEtB,CCjCH,gBACE,YAAa,CACb,4BAA8B,CAFhC,2BAII,kBAAmB,CACnB,kBAAmB,CCgBvB,gBATI,mBANA,wBAgBsB,CAftB,mBAAuB,CAGvB,iBAYwC,CAjBxC,YAAa,CAIb,WAaoC,CAXpC,sBAAuB,CAHvB,UAImB,CAWtB,cANG,UAFoD,CACpD,kBADmC,CAGnC,eAAgB,CCpBpB,2BAAI,CAQJ,wBAJI,kBAF0E,CAC1E,YADqD,CAGrD,sBAAuB,CASvB,iBAAkB,CANtB,oCAGQ,qBAAsB,CACtB,WACJ,CCyBI,UACI,wBP9Ba,COarB,WARa,CASb,mBARqB,CAKrB,UAVkB,CASlB,gBAVa,CAeb,gBAHA,aALkB,CAsBd,gBATA,iCPpBiB,COkCZ,eAID,wBPrCW,COYnB,WARa,CASb,mBARqB,CAKrB,UAVkB,CASlB,gBAVa,CAeb,gBAHA,aALkB,CA8Bd,qBAfA,mCPrBe,COsBf,aPvBiB,CO0CZ,cAKD,iCAA2B,CAC3B,wBPhDa,COcrB,mBARqB,CAKrB,UAVkB,CAgDV,cAvCR,gBAVa,CAeb,eARkB,CAKlB,aPZqB,COkDhB,iBAmBW,4CAHA,gBAAiB,CACjB,ePnEK,COiET,uBAOQ,gCADA,YPvEC,COyEJ,yBAUrB,GAIQ,iBADA,QAAW,CADX,SAEiB,CAKxB,CNlEG,0BMyDJ,GAOQ,gBAAiB,CAExB,CNpFG,yBMsFJ,GAIQ,eADA,QAAW,CADX,SAEe,CAKtB,CN7EG,0BMoEJ,GAOQ,iBAAkB,CAEzB,CAOG,KACI,UAAyB,CAC5B,MAEG,eAA8B,CACjC,MAEG,gBAA+B,CAClC,MAEG,iBAAgC,CACnC,MAEG,cAA6B,CAbjC,MACI,WAAyB,CAC5B,OAEG,gBAA8B,CACjC,OAEG,iBAA+B,CAClC,OAEG,kBAAgC,CACnC,OAEG,eAA6B,CAbjC,MACI,WAAyB,CAC5B,OAEG,gBAA8B,CACjC,OAEG,iBAA+B,CAClC,OAEG,kBAAgC,CACnC,OAEG,eAA6B,CAbjC,MACI,WAAyB,CAC5B,OAEG,gBAA8B,CACjC,OAEG,iBAA+B,CAClC,OAEG,kBAAgC,CACnC,OAEG,eAA6B,CAChC,IAOD,QAAS,CACZ,IAEG,SAAU,CACb,gBChJG,CAKJ,KAEE,cADA,2BRFwB,CCJ1B,cAAc","sources":["component/header/header.scss","scss/_variables.scss","scss/_breakpoints.scss","component/tags/tags.scss","component/layout/layout.scss","component/questions/question.scss","component/badge/badge.scss","component/add-question/addquestions.scss","scss/_cirq.scss","scss/_base.scss"],"sourcesContent":["@import '../../scss/breakpoints';\n@import '../../scss/variables';\n\n.app-heading {  \n  background-color: $app-header-bg;\n  padding: 1rem;\n  text-align: center;\n  color: $app-text-color;\n  border-bottom: solid 1px rgba(0, 0, 0, 0.2);\n  position: fixed;\n  top: 0px;\n  left:0;\n  width: 100%;\n\n}\n\n.appHeader{\n  .header-tags{\n    @include sm {\n      display: block;\n      visibility: visible;\n      text-align: center;\n      margin-top: 10rem;\n    }\n\n    @include xl {\n      display: none;\n      visibility: hidden;\n      text-align: center;\n     }\n  }\n}\n\n","/* Current variables */\n$app-font-family: 'Lato', sans-serif;\n$app-primary-color: #f79256;\n$app-secondary-color: #fbd1a2;\n$app-text-color: #003049ff;\n$app-viewpoer1200-margin: 8rem;\n$app-header-bg: #faedcd;\n\n// New Variables\n$prussian-blue: #003049ff;\n$maximum-red: #d62828ff;\n$orange: #f77f00ff;\n$maximum-yellow-red: #fcbf49ff;\n$lemon-meringue: #eae2b7ff;\n$app-padding: 5px;\n$app-margin: 5px;\n\n\n\n@mixin btnPrimary {\n    background-color: #003049ff;\n    padding: 8px;\n    border: 0;\n    border-radius: 5px;\n    color: #ffffff;\n    font-weight: 700;\n  }","@use \"sass:map\";\n\n$breakpoints:(\n    \"xs\": 0,\n    \"sm\": 600px,\n    \"md\": 768px,\n    \"lg\": 992px,\n    \"xl\": 1200px,\n);\n\n@mixin xs {\n    @media (min-width: map-get($breakpoints, \"xs\")) {\n        @content;\n    }\n}\n\n@mixin sm {\n    @media (min-width: map-get($breakpoints, \"sm\")) {\n        @content;\n    }\n}\n\n@mixin md {\n    @media (min-width: map-get($breakpoints, \"md\")) {\n        @content;\n    }\n}\n\n@mixin lg {\n    @media (min-width: map-get($breakpoints, \"lg\")) {\n        @content;\n    } \n}\n\n@mixin xl {\n    @media (min-width: map-get($breakpoints, \"xl\")) {\n        @content;\n    } \n}\n\n@mixin breakpoint($bp) {\n    @media (min-width: $bp) {\n        @content;\n    } \n}\n\n@debug map-get($map: $breakpoints, $key: \"xs\" )","@import \"../../scss/variables\";\n\n.tec-tags {\n  display: inline-block;\n  padding: 0.6rem;\n  background-color: #f79256;\n  // margin: 5px;\n  border-radius: 5px;\n  font-weight: 500;\n  &:hover {\n    background-color: $maximum-yellow-red;\n    cursor: pointer;\n  }\n  .activeTag{\n    // background-color: $maximum-yellow-red !important;\n    background-color: red !important;\n    border:solid 1px #000;\n  }\n}\n","@use \"sass:map\";\n@import '../../scss/variables';\n@import '../../scss/breakpoints';\n\n\n$appBorder: solid 1px #000;\n$contentPadding: 1rem 1rem;\n\n.main-body{\n  display: flex;\n\n  @include xl {\n    margin: $app-viewpoer1200-margin;\n  }\n\n  .left-content{\n    width: 80%;\n    @include sm{\n      padding: 1.5rem;\n      width: 100%;\n    }\n  }\n\n  .right-content{\n    width: 20%;\n    \n    @include sm{\n      display: none;\n      visibility: hidden;\n    }\n\n    @include xl {\n      display: block;\n      visibility: visible;\n    }\n  }\n}\n\n\n// @include sm {\n//   .main-body {\n//     display: flex;\n\n//     .left-content {\n//       width: auto;\n//       padding: 1rem;\n//     }\n\n//     .right-content {\n//       display: block;\n//       visibility: visible;\n//       width: 20%\n//     }\n\n//     //   @if map.get($breakpoints, \"xs\") {\n//     //     .right-content {\n//     //       display: none;\n//     //       visibility: hidden;\n//     //     }\n//     //   }\n\n//     //   @else if map.get($breakpoints, \"lg\") {\n//     //     .right-content {\n//     //       display: block;\n//     //       visibility: visible;\n//     //     }\n//     //   }\n//     // }\n//   }\n// // }\n\n\n// @include sm {\n//   .main-body {\n//     display: flex;\n\n//     .left-content {\n//       width: auto;\n//       padding: 1rem;\n//     }\n\n//     .right-content {\n//       display: none;\n//       visibility: hidden;\n//       width: 20%\n//     }\n//   }\n// }\n\n// @include lg {\n//   .main-body{\n//     .right-content{\n//       display:block;\n//       visibility: visible;\n//     }\n//   }\n// } ","@import '../../scss/variables';\n\n.card-container{\n  display: flex;\n  margin-bottom: 40px !important;\n  .card-body{\n    display: table-cell;\n    vertical-align: top;\n  }\n}\n","$bg-color: red;\n$border-thickness: 1px;\n$width:100px;\n$height: 100px;\n$border-Radious: 50%;\n\n@mixin badge($bc: $bg-color, $bdr: $border-thickness, $wt: $width, $ht: $height, $br: $border-Radious) {\n    display: flex;\n    background-color: $bc;\n    border: solid $bdr #000;\n    width: $wt;\n    height: $ht;\n    border-radius: $br;\n    justify-content: center;\n    align-items: center;\n}\n\n@mixin badgeContent($font-size:xx-large, $color: #ffffff, $font-weight: 700) {\n    font-size: $font-size;\n    color: $color;\n    font-weight: 700;\n}\n\n.badgeContainer{\n    @include badge(#F79256,0px,60px,60px,50%)    \n}\n\n.badgeContent{\n    @include badgeContent\n}","@use '../../scss/variables';\n\n@mixin QContainer($border: solid 1px #ccc, $display: flex, $align-item: center) {\n    display: $display;\n    align-items: $align-item;\n    justify-content: center;\n}\n\n.add-question-container{\n    @include QContainer();\n    .search-box{\n        box-sizing: border-box;\n        width:35rem\n    }\n    text-align: center;\n}\n","@use \"sass:math\";\n@import \"./variables\";\n@import \"../scss//breakpoints\";\n@import \"./util\";\n\n\n/* BUTTON */\n$elements:(\"button\",\"input\");\n$buttons:(\"main\",\"secondary\",\"outlined\",);\n$btn-size: medium;\n$btn-main-color: white;\n$btn-secondary-color: black;\n$btn-hover-alpha: .9;\n$btn-padding: .8rem;\n$btn-border: none;\n$btn-border-radius: .3rem;\n$btn-font-weight: bold;\n\n@mixin btn-common {\n    font-size: $btn-size;\n    color: $btn-main-color;\n    padding: $btn-padding;\n    border: $btn-border;\n    border-radius: $btn-border-radius;\n    font-weight: $btn-font-weight;\n}\n\n@mixin btn-hover($type, $Color) {\n    @if $type == \"main\"{\n        background-color: rgba($color: $Color, $alpha: $btn-hover-alpha);\n    }@else if $type == \"secondary\"{\n        background-color: rgba($color: $Color, $alpha: $btn-hover-alpha);\n        color: $prussian-blue;\n    }   \n}\n\n@each $button in $buttons {\n    @if $button == \"main\" {\n        .btn-#{$button}{\n            background-color: $prussian-blue;\n            @include btn-common();\n            &:hover{\n                @include btn-hover($button, $prussian-blue);\n            }\n        }\n    }@else if $button == \"secondary\"{\n        .btn-#{$button}{\n            background-color: $maximum-red;\n            @include btn-common();\n            &:hover{\n                @include btn-hover($button, $maximum-red);\n            }            \n        }\n    }@else if $button == \"outlined\"{\n        .btn-#{$button}{\n            @include btn-common();\n            background-color: rgba(#ccc,0.0);\n            border: solid 1px $prussian-blue;\n            color: $prussian-blue;\n        }\n    }\n}\n\n/* BUTTON END*/\n\n$elements:('button','input','form');\n\n// INPUT type=text\n\n@each $element in $elements {\n    $input-type:('text','radio');\n    @if $element == 'input'{\n        @each $type in $input-type {\n            @if $type == 'text' {\n                input[type=#{$type}]{\n                    font-size: medium;\n                    padding: $btn-padding 0px;\n                    border: none;\n                    border-bottom: solid 2px $prussian-blue;\n                    &:focus{\n                        outline: none;\n                        border-bottom: solid 2px $prussian-blue;\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Headings\n\n\nh1{\n    @include sm {\n        padding: 0px;\n        margin: 0px;\n        font-size: 4.5rem;\n    }\n    @include xl {\n        font-size: 2.5rem;\n    }\n}\n\nh2{\n    @include sm {\n        padding: 0px;\n        margin: 0px;\n        font-size: 2rem;\n    }\n    @include xl {\n        font-size: 1.25rem;\n    }\n}\n\n// Gutter spacing [5,10,15,20]\n\n$basePadding: 5;\n\n@while $basePadding  <= 20{\n    .g-#{$basePadding}{\n        margin: $basePadding + px;\n    }\n    .gl-#{$basePadding}{\n        margin-left: $basePadding + px;\n    }\n    .gr-#{$basePadding}{\n        margin-right: $basePadding + px;\n    }\n    .gb-#{$basePadding}{\n        margin-bottom: $basePadding + px;\n    }\n    .gt-#{$basePadding}{\n        margin-top: $basePadding + px;\n    }\n\n    $basePadding: $basePadding + 5;\n}\n\n// margin & padding\n.m0{\n    margin: 0;\n}\n.p0{\n    padding: 0;\n}","@use 'sass:math';\n@import '../scss/variables';\n@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200');\n\nbody {\n  font-family: $app-font-family;\n  color: $app-text-color;\n  \n//   h3,\n//   h2 {\n//     font-family: $app-font-family;\n//   }\n\n//   .material-symbols-outlined {\n//     font-variation-settings:\n//       'FILL' 0,\n//       'wght' 300,\n//       'GRAD' -25,\n//       'opsz' 40\n//   }\n\n}\n\n// .btn-primary {\n//   background-color: #003049ff;\n//   padding: 8px;\n//   border: 0;\n//   border-radius: 5px;\n//   color: #ffffff;\n//   font-weight: 700;\n// }\n\n/* INPUT CLASS GENERATION \"PRIMARY, SECONDARY, TERETORY */\n\n// @mixin appInput($border: solid 1px #ccc, $padding: 10px, $bgColor: #fff) {\n//   border: $border;\n//   padding: $padding;\n//   background-color: $bgColor;\n// }\n\n// $inputHolder: (\"primary\",\"secondary\",\"teretory\");\n\n// @each $var in $inputHolder {\n//   .input-#{$var}{\n//     @if $var == \"primary\" {\n//       @include appInput()\n//     } @else if $var == \"secondary\" {\n//       @include appInput(solid 1px green, 10px,green)\n//     }@else if $var == \"teretory\" {\n//       @include appInput(solid 1px red, 10px,red)\n//     }@else{\n//       @include appInput()\n//     }\n//   }\n// }\n\n// $teritoryColor: #003049ff;\n// $count: 2;\n//  @while $count <= 10 {\n//   .red-shade-#{$count}{\n//     color: rgba($color: $teritoryColor, $alpha: math.div($count,10));\n//   }\n//   $count: $count + 2;\n//  }\n\n\n\n/*\n\n@mixin element($type: $formElements) {\n    @each $var in $type {\n        font-size: medium;\n        @if $var == \"text\" {\n            border: none;\n            border-bottom: solid 1px rgba($color: $prussian-blue, $alpha: 0.2);\n            padding: $app-padding;\n            width: 100%;\n            height: 40px;\n            &:focus {\n                outline-style: none;\n                border-bottom: solid 1px rgba($color: $prussian-blue, $alpha: 1.0);\n            }\n        } @else if $var == \"button\" {\n            padding: 30px;\n            // background-color: red;\n        }\n\n    }\n}\n\n$formElements: (\n    \"text\",\n    \"button\",\n    \"radio\",\n    \"dropdown\"\n);\n\ninput, button {\n    @include element($type: $formElements);\n}\n\n*/\n\n// input{\n//     background-color: red;\n// }\n\n// button{\n//     background-color: green;\n// }\n\n// $elements: (\n//     input,\n//     button\n// );\n\n// @mixin elem($type) {\n\n//     @if $type ==input {\n//         background-color: red;\n//     }\n//     @else if $type ==button {\n//         background-color: green;\n//     }\n\n// }\n\n// button {\n//     // @include elem(button);\n//     background-color: rgba(math.div(45*0, 10),math.div(45*48, 10),math.div(45*73, 10),1);\n// }\n\n// input {\n//     @include elem(input)\n// }\n"],"names":[],"sourceRoot":""}